{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { app } from '../firebase.js';\nimport React, { useState, useEffect } from \"react\";\nimport './Search.css';\nimport SearchField from \"react-search-field\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport AddComment from './AddComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst choices = [{\n  key: \"choice1\",\n  description: \"Event Search\"\n}, {\n  key: \"choice2\",\n  description: \"Friend Search\"\n}];\n\nconst Search = () => {\n  _s();\n\n  const [input, setInput] = React.useState(\"\");\n  const [selectedChoices, setSelectedChoices] = useState(choices);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const searchVars = input.split(' ');\n\n    const fetchEvents = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"events\").where('searchValues', 'array-contains-any', searchVars).get(); //console.log('woo')\n      //console.log(data.docs)\n\n      setEvents(data.docs.map(doc => doc.data()));\n    };\n\n    fetchEvents();\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(SearchField, {\n        placeholder: \"Search for events or friends...\",\n        onEnter: (event, value) => setInput(event) //event => setInput(event.target.value)\n        ,\n        searchText: \"\",\n        classNames: \"test-class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchlist\",\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.eventName, \" : \", event.description, /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: event.commentList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddComment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"Z5PWwdhRi3vPS1NvnW+poadJNgc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/Search.js"],"names":["app","React","useState","useEffect","SearchField","firebase","AddComment","choices","key","description","Search","input","setInput","selectedChoices","setSelectedChoices","events","setEvents","searchVars","split","fetchEvents","db","firestore","data","collection","where","get","docs","map","doc","event","value","eventName","commentList"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIC,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,WAAW,EAAE;AAA/B,CADc,EAEd;AAAED,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,WAAW,EAAE;AAA/B,CAFc,CAAhB;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAACK,OAAD,CAAtD;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,UAAU,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAnB;;AACA,UAAMC,WAAW,GAAG,YAAY;AAChC,YAAMC,EAAE,GAAGf,QAAQ,CAACgB,SAAT,EAAX;AACA,YAAMC,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,KAAxB,CAA8B,cAA9B,EAA8C,oBAA9C,EACnBP,UADmB,EACPQ,GADO,EAAnB,CAFgC,CAIhC;AACA;;AACAT,MAAAA,SAAS,CAACM,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAcC,GAAG,IAAIA,GAAG,CAACN,IAAJ,EAArB,CAAD,CAAT;AACC,KAPD;;AASJH,IAAAA,WAAW;AACV,GAZQ,EAYN,CAACR,KAAD,CAZM,CAAT;AAcD,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,WAAD;AACG,QAAA,WAAW,EAAC,iCADf;AAEG,QAAA,OAAO,EAAG,CAACkB,KAAD,EAAQC,KAAR,KAAkBlB,QAAQ,CAACiB,KAAD,CAFvC,CAGG;AAHH;AAIG,QAAA,UAAU,EAAC,EAJd;AAKG,QAAA,UAAU,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADA,eAQI;AAAA,+BACG;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACLd,MAAM,CAACY,GAAP,CAAWE,KAAK,iBACb;AAAA,uBACOA,KAAK,CAACE,SADb,SAC2BF,KAAK,CAACpB,WADjC,eAEM;AAAA,qCACE;AAAA,0BACGoB,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFN,eAOM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAPN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADK;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AA4BD,CAhDD;;GAAMtB,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import { app } from '../firebase.js';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './Search.css'\r\nimport SearchField from \"react-search-field\";\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport AddComment from './AddComment'\r\n\r\n \r\n\r\n const choices = [\r\n   { key: \"choice1\", description: \"Event Search\" },\r\n   { key: \"choice2\", description: \"Friend Search\" },\r\n ];\r\n\r\n const Search = () => {\r\n    const [input, setInput] = React.useState(\"\");\r\n    const [selectedChoices, setSelectedChoices] = useState(choices);\r\n\r\n    const [events, setEvents] = useState([])\r\n\r\n    useEffect(() => {\r\n        const searchVars = input.split(' ')\r\n        const fetchEvents = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"events\").where('searchValues', 'array-contains-any',\r\n        searchVars).get()\r\n        //console.log('woo')\r\n        //console.log(data.docs)\r\n        setEvents(data.docs.map(doc => doc.data()))\r\n        } \r\n\r\n    fetchEvents()\r\n    }, [input])\r\n\r\n   return (\r\n    <>\r\n     <div className=\"searchbar\"> \r\n     <SearchField\r\n        placeholder=\"Search for events or friends...\"\r\n        onEnter= {(event, value) => setInput(event)}\r\n        //event => setInput(event.target.value)\r\n        searchText=\"\"\r\n        classNames=\"test-class\"\r\n        />\r\n         <div> \r\n            <ul className=\"searchlist\">\r\n\t  \t\t\t{events.map(event => (\r\n\t  \t\t\t    <li> \r\n                {event.eventName} : {event.description}\r\n                <ul>\r\n                  <li>\r\n                    {event.commentList}\r\n                  </li>\r\n                </ul>\r\n                <AddComment  />\r\n              </li>\r\n\t  \t\t    ))}\r\n\t  \t\t</ul>\r\n        </div>\r\n     </div>\r\n     </>\r\n   );\r\n }\r\n\r\n export default Search;"]},"metadata":{},"sourceType":"module"}