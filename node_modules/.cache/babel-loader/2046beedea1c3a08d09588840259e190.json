{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\CommentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'; // need to implement this into the event detail modal\n// need to get user's name corresponding to the comment.userId\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentList = ({\n  eventId: eventId\n}) => {\n  _s();\n\n  const db = firebase.firestore();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const data = await db.collection(\"comments\").where('eventId', '==', eventId).get();\n      let commentForEvent = [];\n\n      for (let item of data.docs) {\n        commentForEvent.push(item.data());\n      }\n\n      setComments(commentForEvent);\n    };\n\n    fetchComments();\n  }, []); // call this whenever this component is invoked\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: comment.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Comment : \", comment.comments]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments to this event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentList, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/CommentList.js"],"names":["React","useState","firebase","CommentList","eventId","db","firestore","comments","setComments","useEffect","fetchComments","data","collection","where","get","commentForEvent","item","docs","push","length","map","comment","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP,C,CAEA;AACA;;;;AACA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAEA;AAAV,CAAD,KAAwB;AAAA;;AACjD,QAAMC,EAAE,GAAGH,QAAQ,CAACI,SAAT,EAAX;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMC,aAAa,GAAG,YAAY;AACjC,YAAMC,IAAI,GAAG,MAAMN,EAAE,CAACO,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,SAAhC,EAA2C,IAA3C,EAAiDT,OAAjD,EAA0DU,GAA1D,EAAnB;AACG,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAK,IAAIC,IAAT,IAAiBL,IAAI,CAACM,IAAtB,EAA2B;AACzBF,QAAAA,eAAe,CAACG,IAAhB,CAAqBF,IAAI,CAACL,IAAL,EAArB;AACC;;AACDH,MAAAA,WAAW,CAACO,eAAD,CAAX;AACD,KAPL;;AAQEL,IAAAA,aAAa;AACf,GAVS,EAUP,EAVO,CAAT,CAJiD,CAc3C;;AAGN,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACCH,QAAQ,CAACY,MAAT,GAAkB,CAAlB,GACGZ,QAAQ,CAACa,GAAT,CAAcC,OAAD,IACf;AACE,4BACE;AAAA,kCACE;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,qCAAeD,OAAO,CAACd,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADF;AAMD,OARC,CADH,gBAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApCM;;GAAMJ,W;;KAAAA,W;AAsCb,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\n// need to implement this into the event detail modal\r\n// need to get user's name corresponding to the comment.userId\r\nexport const CommentList = ({eventId: eventId}) => {\r\n  const db = firebase.firestore()\r\n  const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n\t\tconst fetchComments = async () => {\r\n\t\t\tconst data = await db.collection(\"comments\").where('eventId', '==', eventId).get()\r\n      let commentForEvent = [];\r\n      for (let item of data.docs){\r\n        commentForEvent.push(item.data())\r\n        }\r\n        setComments(commentForEvent)\r\n      }\r\n    fetchComments()\r\n\t}, []) // call this whenever this component is invoked\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n      {comments.length > 0\r\n        ? comments.map((comment) =>\r\n        {\r\n          return (\r\n            <>\r\n              <h3>{comment.email}</h3>\r\n              <li>Comment : {comment.comments}</li>\r\n            </>\r\n          )\r\n        })\r\n        : <p>No comments to this event</p>\r\n      }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentList;"]},"metadata":{},"sourceType":"module"}