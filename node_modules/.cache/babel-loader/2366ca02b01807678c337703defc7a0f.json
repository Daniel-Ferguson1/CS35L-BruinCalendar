{"ast":null,"code":"var _jsxFileName = \"/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import ReactDOM from 'react-dom';\n// import ReactCalendar from \"./ReactCalendar\";\n\nimport Search from \"./Search\";\nimport EventList from './EventList';\nimport Sidebar from '../feature/Sidebar';\nimport Header from './Header';\nimport \"../index.css\";\nimport 'react-bootstrap'; //import Users from './Users'\n\nimport ReactCalendar from \"react-calendar\";\nimport './Calendar.css'; // import { BiAlarmSnooze } from \"react-icons/bi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [calendarEntry, unhideEvent] = useState(new Date());\n  const initialDate = new Date();\n  let [mo, dat, ye] = initialDate.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\"\n  }).split(\"/\");\n  const [entryDate, setEntryDate] = useState(`${ye}-${mo}-${dat}`); // this entryDate has clicked date\n\n  const [formattedDate, setFormattedDate] = useState(initialDate.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\"\n  }).split(\"/\")); // to show in the heading of the eventlist\n\n  const handleClick = calendarEntry => {\n    const [month, date, year] = calendarEntry.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    }).split(\"/\");\n    setEntryDate(`${year}-${month}-${date}`);\n    setFormattedDate(calendarEntry.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).split(\"/\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        link: true,\n        href: \"https://fonts.googleapis.com/css?family=Crimson+Text|Work+Sans:400,700\",\n        rel: \"stylesheet\",\n        children: [/*#__PURE__*/_jsxDEV(ReactCalendar, {\n          value: calendarEntry,\n          onChange: unhideEvent,\n          calendarType: \"US\",\n          onClickDay: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eventlist\",\n        children: /*#__PURE__*/_jsxDEV(EventList, {\n          dateClicked: entryDate,\n          dateFormatted: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"j+vWLassRl7n4VSSn4cIbaaClHg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/HomePage.jsx"],"names":["React","useState","Search","EventList","Sidebar","Header","ReactCalendar","HomePage","calendarEntry","unhideEvent","Date","initialDate","mo","dat","ye","toLocaleDateString","year","month","day","split","entryDate","setEntryDate","formattedDate","setFormattedDate","handleClick","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;AACA,OAAO,iBAAP,C,CACA;;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,gBAAP,C,CACA;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAAEC,aAAF,EAAiBC,WAAjB,IAAiCR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAA/C;AACA,QAAMC,WAAW,GAAG,IAAID,IAAJ,EAApB;AACA,MAAI,CAACE,EAAD,EAAKC,GAAL,EAAUC,EAAV,IAAgBH,WAAW,CAACI,kBAAZ,CAA+B,OAA/B,EAAuC;AAACC,IAAAA,IAAI,EAAC,SAAN;AAAgBC,IAAAA,KAAK,EAAC,SAAtB;AAAgCC,IAAAA,GAAG,EAAC;AAApC,GAAvC,EAAuFC,KAAvF,CAA6F,GAA7F,CAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAE,GAAEa,EAAG,IAAGF,EAAG,IAAGC,GAAI,EAApB,CAA1C,CAJ4B,CAK5B;;AACA,QAAM,CAAES,aAAF,EAAiBC,gBAAjB,IAAsCtB,QAAQ,CAACU,WAAW,CAACI,kBAAZ,CAA+B,OAA/B,EAAuC;AAACC,IAAAA,IAAI,EAAC,SAAN;AAAgBC,IAAAA,KAAK,EAAC,MAAtB;AAA6BC,IAAAA,GAAG,EAAC;AAAjC,GAAvC,EAAoFC,KAApF,CAA0F,GAA1F,CAAD,CAApD,CAN4B,CAO5B;;AAED,QAAMK,WAAW,GAAIhB,aAAD,IAAmB;AACtC,UAAM,CAACS,KAAD,EAAQQ,IAAR,EAAcT,IAAd,IAAsBR,aAAa,CAACO,kBAAd,CAAiC,OAAjC,EAAyC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBC,MAAAA,KAAK,EAAC,SAAtB;AAAgCC,MAAAA,GAAG,EAAC;AAApC,KAAzC,EAAyFC,KAAzF,CAA+F,GAA/F,CAA5B;AACAE,IAAAA,YAAY,CAAE,GAAEL,IAAK,IAAGC,KAAM,IAAGQ,IAAK,EAA1B,CAAZ;AACAF,IAAAA,gBAAgB,CAACf,aAAa,CAACO,kBAAd,CAAiC,OAAjC,EAAyC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAgBC,MAAAA,KAAK,EAAC,MAAtB;AAA6BC,MAAAA,GAAG,EAAC;AAAjC,KAAzC,EAAsFC,KAAtF,CAA4F,GAA5F,CAAD,CAAhB;AACC,GAJF;;AAMC,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,IAAI,MAAhC;AAAiC,QAAA,IAAI,EAAC,wEAAtC;AAA+G,QAAA,GAAG,EAAC,YAAnH;AAAA,gCACE,QAAC,aAAD;AACH,UAAA,KAAK,EAAEX,aADJ;AAEH,UAAA,QAAQ,EAAEC,WAFP;AAGH,UAAA,YAAY,EAAE,IAHX;AAIH,UAAA,UAAU,EAAEe;AAJT;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAYI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,WAAW,EAAEJ,SAAxB;AAAmC,UAAA,aAAa,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnCM;;GAAMf,Q;;KAAAA,Q;AAoCb,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n// import ReactDOM from 'react-dom';\r\n// import ReactCalendar from \"./ReactCalendar\";\r\nimport Search from \"./Search\";\r\nimport EventList from './EventList'\r\nimport Sidebar from '../feature/Sidebar';\r\nimport Header from './Header';\r\nimport \"../index.css\";\r\nimport 'react-bootstrap';\r\n//import Users from './Users'\r\n\r\nimport ReactCalendar from \"react-calendar\"; \r\nimport './Calendar.css';\r\n// import { BiAlarmSnooze } from \"react-icons/bi\";\r\n\r\nexport const HomePage = () => {\r\n  const [ calendarEntry, unhideEvent ] = useState(new Date());\r\n  const initialDate = new Date();\r\n  let [mo, dat, ye] = initialDate.toLocaleDateString(\"en-US\",{year:\"numeric\",month:\"2-digit\",day:\"2-digit\"}).split(\"/\");\r\n  const [entryDate, setEntryDate] = useState(`${ye}-${mo}-${dat}`);\r\n  // this entryDate has clicked date\r\n  const [ formattedDate, setFormattedDate ] = useState(initialDate.toLocaleDateString(\"en-US\",{year:\"numeric\",month:\"long\",day:\"2-digit\"}).split(\"/\"));\r\n  // to show in the heading of the eventlist\r\n\r\n\tconst handleClick = (calendarEntry) => {\r\n\t\tconst [month, date, year] = calendarEntry.toLocaleDateString(\"en-US\",{year:\"numeric\",month:\"2-digit\",day:\"2-digit\"}).split(\"/\");\r\n\t\tsetEntryDate(`${year}-${month}-${date}`);\r\n\t\tsetFormattedDate(calendarEntry.toLocaleDateString(\"en-US\",{year:\"numeric\",month:\"long\",day:\"2-digit\"}).split(\"/\"));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className =\"App\">\r\n          <Sidebar />\r\n          <Header />\r\n          <main className=\"container\" link href=\"https://fonts.googleapis.com/css?family=Crimson+Text|Work+Sans:400,700\" rel=\"stylesheet\">\r\n            <ReactCalendar\r\n\t\t\t\t\t    value={calendarEntry}\r\n\t\t\t\t\t    onChange={unhideEvent}\r\n\t\t\t\t\t    calendarType={\"US\"} \r\n\t\t\t\t\t    onClickDay={handleClick}\r\n\t\t\t\t    /> \r\n            <Search />\r\n          </main>\r\n          <div className='eventlist'>\r\n            <EventList dateClicked={entryDate} dateFormatted={formattedDate} />\r\n          </div>\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\nexport default HomePage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}