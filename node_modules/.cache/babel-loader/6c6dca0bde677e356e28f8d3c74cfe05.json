{"ast":null,"code":"var _jsxFileName = \"/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [error, setError] = useState('');\n  const [listType, setListType] = useState('All');\n  const [users, setUsers] = useState([]);\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const db = firebase.firestore();\n\n      if (listType == 'Friends') {\n        const data = await db.collection(\"users\").where('email', '==', currentUser.email).get().then(queryDocumentSnapshot => {\n          queryDocumentSnapshot.forEach(doc => {\n            console.log(doc.id);\n            setUsers(doc.get('friends'));\n          });\n        });\n      } else {\n        const data = await db.collection(\"users\").get();\n        setUsers(data.docs.map(doc => doc.data()));\n      }\n    };\n\n    fetchUsers();\n  }, [listType]);\n  /*\r\n  .catch((error) => {\r\n         console.log(\"Error getting documents: \", error);\r\n     });\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('All'),\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('Friends'),\n        children: \"My Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [listType, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Users, \"VDnzl7sp34PVtSYYnQAlC7W8sL4=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/Users.jsx"],"names":["React","useRef","useState","useEffect","Form","Button","Alert","useAuth","Link","useHistory","firebase","Users","error","setError","listType","setListType","users","setUsers","currentUser","logout","history","fetchUsers","db","firestore","data","collection","where","email","get","then","queryDocumentSnapshot","forEach","doc","console","log","id","docs","map","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAmC,iBAAnC;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACG,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACH,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BZ,OAAO,EAAvC;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMkB,UAAU,GAAG,YAAY;AAE9B,YAAMC,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;;AACA,UAAIT,QAAQ,IAAI,SAAhB,EACA;AACC,cAAMU,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,KAAvB,CAA6B,OAA7B,EAAsC,IAAtC,EAA4CR,WAAW,CAACS,KAAxD,EAClBC,GADkB,GAElBC,IAFkB,CAEZC,qBAAD,IAA2B;AAChCA,UAAAA,qBAAqB,CAACC,OAAtB,CAA+BC,GAAD,IAAS;AACtCC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAhB;AACAlB,YAAAA,QAAQ,CAACe,GAAG,CAACJ,GAAJ,CAAQ,SAAR,CAAD,CAAR;AACA,WAHD;AAIA,SAPkB,CAAnB;AAQA,OAVD,MAYA;AACC,cAAMJ,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBG,GAAvB,EAAnB;AACAX,QAAAA,QAAQ,CAACO,IAAI,CAACY,IAAL,CAAUC,GAAV,CAAcL,GAAG,IAAIA,GAAG,CAACR,IAAJ,EAArB,CAAD,CAAR;AACA;AACD,KAnBD;;AAoBAH,IAAAA,UAAU;AACV,GAtBQ,EAsBN,CAACP,QAAD,CAtBM,CAAT;AAwBA;AACD;AACA;AACA;AACA;;AAEI,sBACA;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEW,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,SAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAMD;AAAA,8BACG;AAAA,mBAASD,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAA,kBACEE,KAAK,CAACqB,GAAN,CAAUC,IAAI,iBACd;AAAA,oBAAKA,IAAI,CAACX;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YANC;AAAA,kBADA;AAkBH;;GAvDQhB,K;UAIwBJ,O,EAChBE,U;;;KALRE,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\r\nimport { Form, Button, Alert} from 'react-bootstrap';\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\nfunction Users() {\r\n\tconst [error, setError] = useState('') \r\n    const [listType, setListType] = useState('All')\r\n\tconst [users, setUsers] = useState([]) \r\n\tconst { currentUser, logout } = useAuth()\r\n\tconst history = useHistory()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUsers = async () => {\r\n\r\n\t\t\tconst db = firebase.firestore()\r\n\t\t\tif (listType == 'Friends')\r\n\t\t\t{\r\n\t\t\t\tconst data = await db.collection(\"users\").where('email', '==', currentUser.email)\r\n\t\t\t\t.get()\r\n\t\t\t\t.then((queryDocumentSnapshot) => {\r\n\t\t\t\t\tqueryDocumentSnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tconsole.log(doc.id)\r\n\t\t\t\t\t\tsetUsers(doc.get('friends'));\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconst data = await db.collection(\"users\").get()\r\n\t\t\t\tsetUsers(data.docs.map(doc => doc.data()))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchUsers()\r\n\t}, [listType])\r\n\r\n\t/*\r\n\t.catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n\t*/\r\n\r\n    return (\r\n\t  \t<>\r\n\t  \t\t<h2>Users</h2>\r\n\t  \t\t<div>\r\n\t  \t\t\t<Button onClick={() => setListType('All')}>All Users</Button>\r\n                <Button onClick={() => setListType('Friends')}>My Friends</Button>\r\n\t  \t\t</div>\r\n\t\t\t<div> \r\n\t  \t\t\t<strong>{listType}: </strong> \r\n\t  \t\t\t<ul>\r\n\t  \t\t\t\t{users.map(user => (\r\n\t  \t\t\t\t\t<li>{user.email}</li>\r\n\t  \t\t\t\t))}\r\n\t  \t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t  \t</>\r\n  \t);\r\n}\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}