{"ast":null,"code":"var _jsxFileName = \"/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const db = firebase.firestore();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const data = {\n      email: emailRef.current.value,\n      userName: '',\n      school: '',\n      friends: []\n    };\n    await db.collection('users').doc(emailRef.current.value).set(data);\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value); //.then((userCredential) => {\n      // Signed in \n      //var user = userCredential.user;\n      //console.log(user.uid)\n      // ...\n      // })\n      //await db.collection('users').doc().set(data);\n\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            ref: emailRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: passwordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"password-confirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: passwordConfirmRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading,\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n} //export default Signup;\n\n_s(Signup, \"Gtk3nZ4HDG+cInsbkw2EvcCkjL8=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/Signup.js"],"names":["React","useRef","useState","Form","Button","Alert","useAuth","Link","useHistory","firebase","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","db","firestore","current","value","data","email","userName","school","friends","collection","doc","set","push","err","console","log"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport { Form, Button, Alert} from 'react-bootstrap';\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\nexport default function Signup() {\r\n\tconst emailRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\tconst passwordConfirmRef = useRef();\r\n\tconst {signup} = useAuth()\r\n\tconst [error, setError] = useState('')\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst history = useHistory()\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\tconst db = firebase.firestore()\r\n\t\tif(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n\t\t\treturn setError(\"Passwords do not match\");\r\n\t\t}\r\n\t\tconst data = {\r\n\t\t\temail: emailRef.current.value,\r\n\t\t\tuserName: '',\r\n\t\t\tschool: '',\r\n\t\t\tfriends: []\r\n\t\t  };\r\n\t\tawait db.collection('users').doc(emailRef.current.value).set(data);\r\n\t\ttry{\r\n\t\t\tsetError(\"\");\r\n\t\t\tsetLoading(true);\r\n\t\t\tawait signup(emailRef.current.value, passwordRef.current.value)\r\n\t\t\t//.then((userCredential) => {\r\n\t\t\t\t// Signed in \r\n\t\t\t\t//var user = userCredential.user;\r\n\t\t\t\t//console.log(user.uid)\r\n\t\t\t\t// ...\r\n\t\t\t // })\r\n\t\t\t//await db.collection('users').doc().set(data);\r\n\t\t\thistory.push(\"/\")\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tconsole.log(err)\r\n\t\t\tsetError(\"Failed to create an account\");\r\n\t\t}\r\n\t\t\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\treturn ( \r\n\t\t<>\r\n\t  <div>\r\n\t\t <h2>Sign Up</h2>\r\n\t\t {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\t\t <Form onSubmit={handleSubmit}>\r\n\t\t  <Form.Group id=\"email\">\r\n\t\t  \t<Form.Label>Email</Form.Label>\r\n\t\t  \t<Form.Control type=\"email\" ref={emailRef} required />\r\n\t\t  </Form.Group>\r\n\t\t  <Form.Group id=\"password\">\r\n\t\t  \t\t<Form.Label>Password</Form.Label>\r\n\t\t  \t\t<Form.Control type=\"password\" ref={passwordRef} required />\r\n\t\t  </Form.Group>\r\n\t\t  \t<Form.Group id=\"password-confirm\">\r\n\t\t  \t\t<Form.Label>Password Confirmation</Form.Label>\r\n\t\t  \t\t<Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n\t\t  \t</Form.Group>\r\n\t\t  \t<Button disabled={loading} type=\"submit\">Sign Up</Button>\r\n\t\t</Form>\r\n\t  </div> \r\n\t  <div>\r\n\t  \tAlready have an account? <Link to=\"/login\">Log In </Link>\r\n\t  </div>\r\n\t  </>\r\n\r\n\t);\r\n}\r\n\r\n//export default Signup;"]},"metadata":{},"sourceType":"module"}