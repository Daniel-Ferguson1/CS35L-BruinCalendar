{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\AddComment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport Sidebar from '../feature/Sidebar';\nimport Header from './Header';\nimport 'firebase/firestore'; // comments collection fields:\n// eventId (string) : hash of the event \n// text    (string) : comment\n// email   (string) : email of the user who commented on this eventId\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddComment = ({\n  eventId: eventId\n}) => {\n  _s();\n\n  const dateRef = useRef();\n  const timeRef = useRef();\n  const nameRef = useRef();\n  const descriptionRef = useRef();\n  const commentRef = useRef();\n  const {\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      const db = firebase.firestore();\n      let date = dateRef.current.value;\n      let time = timeRef.current.value;\n      let name = nameRef.current.value;\n      let desc = descriptionRef.current.value;\n      let comment = commentRef.current.value;\n      let nameArray = name.split(' '); //console.log(nameArray)\n\n      let descArray = desc.split(' ');\n      let searchArray = nameArray.concat(descArray);\n      const data = {\n        date: date,\n        time: time,\n        userId: currentUser.email,\n        eventName: name,\n        description: desc,\n        commentList: comment,\n        searchValues: searchArray,\n        jointEvent: false,\n        guest: ''\n      };\n      let collectionRef = db.collection('events');\n      let theID = 0;\n      await collectionRef.add(data).then(documentReference => {\n        theID = documentReference.id; //console.log(`Added document with name '${documentReference.id}'`);\n      }); //const res = await db.collection('events').doc().set(data);\n\n      const cityRef = db.collection('events').doc(theID);\n      const res = await cityRef.set({\n        eventId: theID\n      }, {\n        merge: true\n      }); //console.log(theID)\n\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      setError(\"Failed to add event\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addEvent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            ref: dateRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"time\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Time: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"time\",\n            ref: timeRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: nameRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Event Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: descriptionRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comments: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: commentRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading,\n          type: \"submit\",\n          children: \"Add Event: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addEvent\",\n      children: [\"No longer need to schedule an event? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddComment, \"xzOALuV/D1+MMG71ylbub5j5Lx0=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = AddComment;\nexport default AddComment; // import React, {useRef, useState} from 'react';\n// import { Form, Button, Alert} from 'react-bootstrap';\n// import {useAuth} from '../contexts/AuthContext'\n// import { useHistory} from 'react-router-dom'\n// import firebase from 'firebase/app'\n// import 'firebase/firestore';\n// export const AddComment = ({ eventId: eventId }) => {\n// \tconst commentRef = useRef();\n// \tconst [error, setError] = useState('')\n// \tconst {currentUser} = useAuth()\n// \tconst [loading, setLoading] = useState(false)\n// \tconst history = useHistory()\n// \tasync function handleComments(str) {\n// \t\tstr.preventDefault()\n// \t\ttry{\n// \t\t\tsetError(\"\");\n// \t\t\tsetLoading(true);\n// \t\t\tconst db = firebase.firestore()\n//             let comment = commentRef.current.value\n// \t\t\tlet commentArray = comment.split('LISTBREAK')\n// \t\t\tconst data = {\n//                 comments: commentArray,\n// \t\t\t\tuserId: currentUser.uid\n// \t\t\t  };\n// \t\t\tconst res = await db.collection('comments').doc().set(data);\n// \t\t\thistory.push(\"/\")\n// \t\t}\n// \t\tcatch(err){\n// \t\t\tconsole.log(err)\n// \t\t\tsetError(\"Failed to add comment\");\n// \t\t}\n// \t\tsetLoading(false);\n// \t}\n// \treturn ( \n// \t  <div>\n// \t\t {error && <Alert variant=\"danger\">{error}</Alert>}\n// \t\t <Form onSubmit={handleComments}>\n// \t\t    <Form.Group id=\"comment\">\n// \t\t  \t\t<Form.Label>Add Comment: </Form.Label> <br></br>\n// \t\t  \t\t<Form.Control ref={commentRef} />\n// \t\t  \t</Form.Group>\n// \t\t  \t<Button disabled={loading} type=\"submit\" id=\"button\">Submit</Button>\n// \t\t</Form>\n// \t  </div> \n// \t);\n// }\n// export default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/AddComment.jsx"],"names":["React","useRef","useState","Form","Button","Alert","useAuth","Link","useHistory","firebase","Sidebar","Header","AddComment","eventId","dateRef","timeRef","nameRef","descriptionRef","commentRef","currentUser","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","db","firestore","date","current","value","time","name","desc","comment","nameArray","split","descArray","searchArray","concat","data","userId","email","eventName","description","commentList","searchValues","jointEvent","guest","collectionRef","collection","theID","add","then","documentReference","id","cityRef","doc","res","set","merge","push","err","console","log"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport { Form, Button, Alert} from 'react-bootstrap';\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport Sidebar from '../feature/Sidebar';\r\nimport Header from './Header';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// comments collection fields:\r\n// eventId (string) : hash of the event \r\n// text    (string) : comment\r\n// email   (string) : email of the user who commented on this eventId\r\nexport const AddComment = ({ eventId: eventId }) => {\r\n\tconst dateRef = useRef();\r\n\tconst timeRef = useRef();\r\n\tconst nameRef = useRef();\r\n    const descriptionRef = useRef();\r\n\tconst commentRef = useRef();\r\n\tconst {currentUser} = useAuth()\r\n\tconst [error, setError] = useState('')\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst history = useHistory()\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\ttry{\r\n\t\t\tsetError(\"\");\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst db = firebase.firestore()\r\n            let date = dateRef.current.value\r\n            let time = timeRef.current.value\r\n            let name = nameRef.current.value\r\n            let desc = descriptionRef.current.value\r\n\t\t\tlet comment = commentRef.current.value\r\n            let nameArray = name.split(' ')\r\n\t\t\t//console.log(nameArray)\r\n            let descArray = desc.split(' ')\r\n            let searchArray = nameArray.concat(descArray)\r\n            \r\n\t\t\tconst data = {\r\n\t\t\t\tdate: date,\r\n\t\t\t\ttime: time,\r\n\t\t\t\tuserId: currentUser.email,\r\n\t\t\t\teventName: name,\r\n                description: desc,\r\n\t\t\t\tcommentList: comment,\r\n\t\t\t\tsearchValues: searchArray,\r\n\t\t\t\tjointEvent: false,\r\n\t\t\t\tguest: '',\r\n\r\n\t\t\t  };\r\n\t\t\tlet collectionRef = db.collection('events');\r\n\t\t\tlet theID = 0;\r\n\t\t\tawait collectionRef.add(data).then(documentReference => {\r\n\t\t\t\ttheID = documentReference.id\r\n\t\t\t\t//console.log(`Added document with name '${documentReference.id}'`);\r\n\t\t\t});\r\n\t\t\t//const res = await db.collection('events').doc().set(data);\r\n\t\t\tconst cityRef = db.collection('events').doc(theID);\r\n\r\n\t\t\tconst res = await cityRef.set({\r\n  \t\t\t\teventId: theID\r\n\t\t\t}, { merge: true });\r\n\t\t\t//console.log(theID)\r\n\t\t\thistory.push(\"/\")\r\n\t\t}\r\n\t\tcatch(err){\r\n\t\t\tconsole.log(err)\r\n\t\t\tsetError(\"Failed to add event\");\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\treturn ( \r\n\t\t<>\r\n\t  \t<div>\r\n          <Sidebar />\r\n          <Header />\r\n\t\t</div>\r\n\r\n\t\t<div className=\"addEvent\">\r\n\t\t <h2>Create Event</h2>\r\n\t\t {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\t\t <Form onSubmit={handleSubmit}>\r\n\t\t  <Form.Group id=\"date\">\r\n\t\t  \t<Form.Label>Date: </Form.Label>\r\n\t\t  \t<Form.Control type=\"date\" ref={dateRef} required />\r\n\t\t  </Form.Group>\r\n\r\n          <Form.Group id=\"time\">\r\n\t\t  \t<Form.Label>Time: </Form.Label>\r\n\t\t  \t<Form.Control type=\"time\" ref={timeRef} required />\r\n\t\t  </Form.Group>\r\n\r\n\t\t  <Form.Group id=\"name\">\r\n\t\t  \t\t<Form.Label>Event Name: </Form.Label>\r\n\t\t  \t\t<Form.Control ref={nameRef} required />\r\n\t\t  </Form.Group>\r\n\r\n\t\t    <Form.Group id=\"description\">\r\n\t\t  \t\t<Form.Label>Event Description: </Form.Label>\r\n\t\t  \t\t<Form.Control ref={descriptionRef} />\r\n\t\t  \t</Form.Group>\r\n\r\n\t\t\t  <Form.Group id=\"comment\">\r\n\t\t  \t\t<Form.Label>Comments: </Form.Label>\r\n\t\t  \t\t<Form.Control ref={commentRef} required />\r\n\t\t  </Form.Group>\r\n\r\n\t\t  \t<Button disabled={loading} type=\"submit\">Add Event: </Button>\r\n\t\t</Form>\r\n\t  </div> \r\n\t  \r\n\t  <div className=\"addEvent\">\r\n\t  \tNo longer need to schedule an event? <Link to=\"/\">Cancel </Link>\r\n\t  </div>\r\n\t  </>\r\n\r\n\t);\r\n}\r\n\r\nexport default AddComment;\r\n\r\n// import React, {useRef, useState} from 'react';\r\n// import { Form, Button, Alert} from 'react-bootstrap';\r\n// import {useAuth} from '../contexts/AuthContext'\r\n// import { useHistory} from 'react-router-dom'\r\n// import firebase from 'firebase/app'\r\n// import 'firebase/firestore';\r\n\r\n// export const AddComment = ({ eventId: eventId }) => {\r\n// \tconst commentRef = useRef();\r\n// \tconst [error, setError] = useState('')\r\n// \tconst {currentUser} = useAuth()\r\n// \tconst [loading, setLoading] = useState(false)\r\n// \tconst history = useHistory()\r\n\r\n\r\n\r\n// \tasync function handleComments(str) {\r\n// \t\tstr.preventDefault()\r\n// \t\ttry{\r\n// \t\t\tsetError(\"\");\r\n// \t\t\tsetLoading(true);\r\n// \t\t\tconst db = firebase.firestore()\r\n//             let comment = commentRef.current.value\r\n// \t\t\tlet commentArray = comment.split('LISTBREAK')\r\n\r\n// \t\t\tconst data = {\r\n//                 comments: commentArray,\r\n// \t\t\t\tuserId: currentUser.uid\r\n// \t\t\t  };\r\n// \t\t\tconst res = await db.collection('comments').doc().set(data);\r\n// \t\t\thistory.push(\"/\")\r\n// \t\t}\r\n// \t\tcatch(err){\r\n// \t\t\tconsole.log(err)\r\n// \t\t\tsetError(\"Failed to add comment\");\r\n// \t\t}\r\n// \t\tsetLoading(false);\r\n// \t}\r\n\r\n// \treturn ( \r\n// \t  <div>\r\n// \t\t {error && <Alert variant=\"danger\">{error}</Alert>}\r\n// \t\t <Form onSubmit={handleComments}>\r\n// \t\t    <Form.Group id=\"comment\">\r\n// \t\t  \t\t<Form.Label>Add Comment: </Form.Label> <br></br>\r\n// \t\t  \t\t<Form.Control ref={commentRef} />\r\n// \t\t  \t</Form.Group>\r\n\t\t\t  \r\n// \t\t  \t<Button disabled={loading} type=\"submit\" id=\"button\">Submit</Button>\r\n// \t\t</Form>\r\n\r\n// \t  </div> \r\n// \t);\r\n// }\r\n\r\n// export default AddComment;"]},"metadata":{},"sourceType":"module"}