{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport AddComment from './AddComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EventList = ({\n  dateClicked: day,\n  dateFormatted: dateFormatted\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const db = firebase.firestore();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const data = await db.collection(\"events\").where('date', '==', day).get();\n      let usersEvents = [];\n\n      for (let item of data.docs) {\n        let event = item.data();\n\n        if (event.userId == currentUser.email || event.guest == currentUser.email) {\n          usersEvents.push(event);\n        }\n      }\n\n      setEvents(usersEvents);\n    };\n\n    fetchEvents();\n  }, [dateFormatted]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Events on \", dateFormatted, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.length > 0 ? events.map(event => {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: [\"Event at \", event.time, \" : \", event.eventName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventList, \"T4CcDRXtKvkBL62LU/wlMOFlg4w=\", false, function () {\n  return [useAuth];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/EventList.js"],"names":["React","useState","useEffect","useAuth","firebase","AddComment","EventList","dateClicked","day","dateFormatted","currentUser","db","firestore","events","setEvents","fetchEvents","data","collection","where","get","usersEvents","item","docs","event","userId","email","guest","push","length","map","time","eventName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACxBC,EAAAA,WAAW,EAAEC,GADW;AAExBC,EAAAA,aAAa,EAAEA;AAFS,CAAD,KAGnB;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,OAAO,EAA/B;AACA,QAAMQ,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAX;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMa,WAAW,GAAG,YAAY;AAC/B,YAAMC,IAAI,GAAG,MAAML,EAAE,CAACM,UAAH,CAAc,QAAd,EAAwBC,KAAxB,CAA8B,MAA9B,EAAsC,IAAtC,EAA4CV,GAA5C,EAAiDW,GAAjD,EAAnB;AACG,UAAIC,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIC,IAAT,IAAiBL,IAAI,CAACM,IAAtB,EAA2B;AACzB,YAAIC,KAAK,GAAGF,IAAI,CAACL,IAAL,EAAZ;;AACA,YAAGO,KAAK,CAACC,MAAN,IAAgBd,WAAW,CAACe,KAA5B,IAAqCF,KAAK,CAACG,KAAN,IAAehB,WAAW,CAACe,KAAnE,EAAyE;AACvEL,UAAAA,WAAW,CAACO,IAAZ,CAAiBJ,KAAjB;AACD;AACF;;AACJT,MAAAA,SAAS,CAACM,WAAD,CAAT;AAEA,KAXD;;AAYAL,IAAAA,WAAW;AACX,GAdS,EAcP,CAACN,aAAD,CAdO,CAAT;AAgBE,sBACA;AAAA,4BAEC;AAAA,+BAAgBA,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGI;AAAA,gBACCI,MAAM,CAACe,MAAP,GAAgB,CAAhB,GACCf,MAAM,CAACgB,GAAP,CAAYN,KAAD,IACb;AACE;AAAA;AAAA,kCAAcA,KAAK,CAACO,IAApB,SAA6BP,KAAK,CAACQ,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,OAHC,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADA;AAeH,CAvCM;;GAAMzB,S;UAIaH,O;;;KAJbG,S;AAwCb,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport AddComment from './AddComment';\r\n\r\nexport const EventList = ({\r\n  dateClicked: day,\r\n  dateFormatted: dateFormatted,\r\n}) => {\r\n  const { currentUser } = useAuth()\r\n  const db = firebase.firestore()\r\n  const [events, setEvents] = useState([])\r\n\r\n  useEffect(() => {\r\n\t\tconst fetchEvents = async () => {\r\n\t\t\tconst data = await db.collection(\"events\").where('date', '==', day).get()\r\n      let usersEvents = [];\r\n      for (let item of data.docs){\r\n        let event = item.data()\r\n        if(event.userId == currentUser.email || event.guest == currentUser.email){\r\n          usersEvents.push(event)\r\n        }\r\n      }\r\n\t\t\tsetEvents(usersEvents)\r\n\r\n\t\t}\r\n\t\tfetchEvents()\r\n\t}, [dateFormatted])\r\n\r\n    return (\r\n\t  \t<>\r\n        {/* <AddComment /> */}\r\n\t  \t\t<h2>Events on { dateFormatted } </h2>\r\n        <ul>\r\n        {events.length > 0\r\n        ? events.map((event) =>\r\n        {\r\n          <li>Event at {event.time} : {event.eventName}</li>\r\n        })\r\n        : <p>No events to display</p>\r\n        }\r\n        </ul>\r\n\t  \t</>\r\n  \t);\r\n}\r\nexport default EventList;"]},"metadata":{},"sourceType":"module"}