{"ast":null,"code":"var _jsxFileName = \"/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/FriendList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport Users from \"./Users\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FriendList() {\n  _s();\n\n  const [error, setError] = useState('');\n  const [events, setEvents] = useState([]);\n  const history = useHistory();\n  const [listType, setListType] = useState('All');\n  const [active, setActive] = useState(false);\n  const [users, setUsers] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n  const db = firebase.firestore(); //const admin = require('firebase-admin');\n\n  async function addFriend(e, item) {\n    //const theUser = await db.collection(\"users\").where('email', '==', currentUser.email).get()\n    const theUser = db.collection('users').doc(currentUser.email);\n    const unionRes = await theUser.update({\n      friends: firebase.firestore.FieldValue.arrayUnion(item.email)\n    });\n  }\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      if (listType == 'Friends') {\n        const data = await db.collection(\"users\").doc(currentUser.email).get();\n        var firstName = doc.get(\"friends\");\n        console.log(firstName);\n      } else {\n        const data = await db.collection(\"users\").get();\n        setUsers(data.docs.map(doc => doc.data()));\n      }\n    };\n\n    fetchUsers();\n  }, [listType]);\n  let message = '';\n\n  if (listType == 'Friends') {\n    message = 'View Profile';\n  } else {\n    message = 'Add Friend';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Email: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), \" \", currentUser.email, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('All'),\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('Friends'),\n        children: \"My Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [listType, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => {\n          if (user.email == currentUser.email) {\n            return;\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.email, \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => addFriend(e, user),\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FriendList, \"DSlBihRN7tR2bJ1bbw9MtPvUnYY=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = FriendList;\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/FriendList.jsx"],"names":["React","useRef","useState","useEffect","Form","Button","Alert","useAuth","Link","useHistory","Users","firebase","FriendList","error","setError","events","setEvents","history","listType","setListType","active","setActive","users","setUsers","currentUser","db","firestore","addFriend","e","item","theUser","collection","doc","email","unionRes","update","friends","FieldValue","arrayUnion","fetchUsers","data","get","firstName","console","log","docs","map","message","user"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\nimport { Form, Button, Alert} from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext'\nimport {Link, useHistory} from 'react-router-dom'\nimport Users from \"./Users\"\nimport firebase from 'firebase/app'\nimport 'firebase/firestore';\n\nfunction FriendList() {\n\tconst [error, setError] = useState('') \n\tconst [events, setEvents] = useState([]) \n\tconst history = useHistory()\n    const [listType, setListType] = useState('All')\n    const [active, setActive] = useState(false)\n\tconst [users, setUsers] = useState([]) \n\tconst { currentUser } = useAuth()\n    const db = firebase.firestore()\n    //const admin = require('firebase-admin');\n\n\tasync function addFriend(e,item){\n        //const theUser = await db.collection(\"users\").where('email', '==', currentUser.email).get()\n        const theUser = db.collection('users').doc(currentUser.email);\n\n        const unionRes = await theUser.update({\n            friends: firebase.firestore.FieldValue.arrayUnion(item.email)\n          });\n    }\n\n\tuseEffect(() => {\n\t\tconst fetchUsers = async () => {\n\n\t\t\tif (listType == 'Friends')\n\t\t\t{\n\t\t\t\tconst data = await db.collection(\"users\").doc(currentUser.email)\n\t\t\t\t.get()\n                var firstName = doc.get(\"friends\");\n\t\t\t\tconsole.log(firstName)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst data = await db.collection(\"users\").get()\n\t\t\t\tsetUsers(data.docs.map(doc => doc.data()))\n\t\t\t}\n\t\t}\n\t\tfetchUsers()\n\t}, [listType])\n\n    let message = ''\n    if (listType == 'Friends') {\n        message = 'View Profile'\n    } \n    else {\n        message = 'Add Friend'\n    }\n\n    return (\n\t  \t<>\n\t  \t\t<h2>Friends</h2>\n            <strong>Email: </strong> {currentUser.email}\n\t  \t\t<div>\n\t  \t\t\t<Button onClick={() => setListType('All')}>All Users</Button>\n                <Button onClick={() => setListType('Friends')}>My Friends</Button>\n\t  \t\t</div>\n\t\t\t<div> \n\t  \t\t\t<strong>{listType}: </strong> \n\t  \t\t\t<ul>\n\t  \t\t\t\t{users.map(user => {\n                        if(user.email == currentUser.email){\n                            return\n                        }\n\t  \t\t\t\t\treturn <li>{user.email} <Button onClick={e => addFriend(e,user)}>{message}</Button> </li>\n                      })}\n\t  \t\t\t</ul>\n\t\t\t</div>\n\t  \t</>\n  \t);\n}\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}