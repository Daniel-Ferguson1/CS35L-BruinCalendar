{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\CommentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailCell = styled.td` \n  padding: 8px;\n`;\nconst LeftData = styled(DetailCell)`\nfont-weight: bold;\nwidth: 50%;\n`;\n_c = LeftData;\nconst RightData = styled(DetailCell)``; // need to implement this into the event detail modal\n// need to get user's name corresponding to the comment.userId\n\n_c2 = RightData;\nexport const CommentList = ({\n  eventId: eventId\n}) => {\n  _s();\n\n  const db = firebase.firestore();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const data = await db.collection(\"comments\").where('eventId', '==', eventId).get();\n      let commentForEvent = [];\n\n      for (let item of data.docs) {\n        commentForEvent.push(item.data());\n      }\n\n      setComments(commentForEvent);\n    };\n\n    fetchComments();\n  }, []); // call this whenever this component is invoked\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.length > 0 ? comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(LeftData, {\n              children: comment.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RightData, {\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments to this event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentList, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c3 = CommentList;\nexport default CommentList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LeftData\");\n$RefreshReg$(_c2, \"RightData\");\n$RefreshReg$(_c3, \"CommentList\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/CommentList.js"],"names":["React","useState","useEffect","firebase","styled","DetailCell","td","LeftData","RightData","CommentList","eventId","db","firestore","comments","setComments","fetchComments","data","collection","where","get","commentForEvent","item","docs","push","length","map","comment","email","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,UAAU,GAAGD,MAAM,CAACE,EAAG;AAC7B;AACA,CAFA;AAIA,MAAMC,QAAQ,GAAGH,MAAM,CAACC,UAAD,CAAa;AACpC;AACA;AACA,CAHA;KAAME,Q;AAKN,MAAMC,SAAS,GAAGJ,MAAM,CAACC,UAAD,CAAa,EAArC,C,CAEA;AACA;;MAHMG,S;AAIN,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAEA;AAAV,CAAD,KAAwB;AAAA;;AACjD,QAAMC,EAAE,GAAGR,QAAQ,CAACS,SAAT,EAAX;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMa,aAAa,GAAG,YAAY;AACjC,YAAMC,IAAI,GAAG,MAAML,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,SAAhC,EAA2C,IAA3C,EAAiDR,OAAjD,EAA0DS,GAA1D,EAAnB;AACG,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAK,IAAIC,IAAT,IAAiBL,IAAI,CAACM,IAAtB,EAA2B;AACzBF,QAAAA,eAAe,CAACG,IAAhB,CAAqBF,IAAI,CAACL,IAAL,EAArB;AACC;;AACDF,MAAAA,WAAW,CAACM,eAAD,CAAX;AACD,KAPL;;AAQEL,IAAAA,aAAa;AACf,GAVS,EAUP,EAVO,CAAT,CAJiD,CAc3C;;AAGN,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACCF,QAAQ,CAACW,MAAT,GAAkB,CAAlB,GACGX,QAAQ,CAACY,GAAT,CAAcC,OAAD,IACf;AACE,4BACE;AAAA,iCACE;AAAA,oCACE,QAAC,QAAD;AAAA,wBAAWA,OAAO,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYD,OAAO,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAVC,CADH,gBAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCM;;GAAMnB,W;;MAAAA,W;AAwCb,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DetailCell = styled.td` \r\n  padding: 8px;\r\n`\r\n\r\nconst LeftData = styled(DetailCell)`\r\nfont-weight: bold;\r\nwidth: 50%;\r\n`;\r\n\r\nconst RightData = styled(DetailCell)``;\r\n\r\n// need to implement this into the event detail modal\r\n// need to get user's name corresponding to the comment.userId\r\nexport const CommentList = ({eventId: eventId}) => {\r\n  const db = firebase.firestore()\r\n  const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n\t\tconst fetchComments = async () => {\r\n\t\t\tconst data = await db.collection(\"comments\").where('eventId', '==', eventId).get()\r\n      let commentForEvent = [];\r\n      for (let item of data.docs){\r\n        commentForEvent.push(item.data())\r\n        }\r\n        setComments(commentForEvent)\r\n      }\r\n    fetchComments()\r\n\t}, []) // call this whenever this component is invoked\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n      {comments.length > 0\r\n        ? comments.map((comment) =>\r\n        {\r\n          return (\r\n            <tbody>\r\n              <tr>\r\n                <LeftData>{comment.email}</LeftData>\r\n                <RightData>{comment.text}</RightData>\r\n              </tr>\r\n            </tbody>\r\n          )\r\n        })\r\n        : <p>No comments to this event</p>\r\n      }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentList;"]},"metadata":{},"sourceType":"module"}