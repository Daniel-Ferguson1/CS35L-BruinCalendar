{"ast":null,"code":"var _jsxFileName = \"/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/FriendList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FriendList() {\n  _s();\n\n  const [error, setError] = useState('');\n  const [listType, setListType] = useState('All');\n  const [active, setActive] = useState(false);\n  const [users, setUsers] = useState([]);\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const history = useHistory();\n\n  async function addFriend() {\n    //condition checking to change state from true to false and vice versa\n    console.log('hey'); //console.log(item.email)\n  }\n\n  async function addFriend2() {//condition checking to change state from true to false and vice versa\n    //console.log('hey')\n    //console.log(item.email)\n  }\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const db = firebase.firestore();\n\n      if (listType == 'Friends') {\n        const data = await db.collection(\"users\").where('email', '==', currentUser.email).get().then(queryDocumentSnapshot => {\n          queryDocumentSnapshot.forEach(doc => {\n            setUsers(doc.get('friends'));\n          });\n        });\n      } else {\n        const data = await db.collection(\"users\").get();\n        setUsers(data.docs.map(doc => doc.data()));\n      }\n    };\n\n    fetchUsers();\n  }, [listType]);\n  let button;\n  let message = '';\n\n  if (listType == 'Friends') {\n    message = 'View Profile';\n    button = /*#__PURE__*/_jsxDEV(Button, {\n      children: \"View Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this);\n  } else {\n    message = 'Add Friend';\n    button = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addFriend2,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('All'),\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setListType('Friends'),\n        children: \"My Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [listType, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => {\n          //if(!active){\n          //message = 'Friend Request Sent'\n          //}\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.email, \" button = \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addFriend(),\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 42\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FriendList, \"uxMGlFJTzDm1njrTvPhOgJQsvQY=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = FriendList;\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/danielferguson/Documents/School/4th Year /Spring 2021/35L/Project/CS35L-BruinCalendar/src/components/FriendList.jsx"],"names":["React","useRef","useState","useEffect","Form","Button","Alert","useAuth","Link","useHistory","firebase","FriendList","error","setError","listType","setListType","active","setActive","users","setUsers","currentUser","logout","history","addFriend","console","log","addFriend2","fetchUsers","db","firestore","data","collection","where","email","get","then","queryDocumentSnapshot","forEach","doc","docs","map","button","message","user"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\nimport { Form, Button, Alert} from 'react-bootstrap';\nimport {useAuth} from '../contexts/AuthContext'\nimport {Link, useHistory} from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore';\n\nfunction FriendList() {\n\tconst [error, setError] = useState('') \n    const [listType, setListType] = useState('All')\n    const [active, setActive] = useState(false)\n\tconst [users, setUsers] = useState([]) \n\tconst { currentUser, logout } = useAuth()\n\tconst history = useHistory()\n\n    async function addFriend(){\n        //condition checking to change state from true to false and vice versa\n        console.log('hey')\n        //console.log(item.email)\n    }\n\n    async function addFriend2(){\n        //condition checking to change state from true to false and vice versa\n        //console.log('hey')\n        //console.log(item.email)\n    }\n\n\tuseEffect(() => {\n\t\tconst fetchUsers = async () => {\n\n\t\t\tconst db = firebase.firestore()\n\t\t\tif (listType == 'Friends')\n\t\t\t{\n\t\t\t\tconst data = await db.collection(\"users\").where('email', '==', currentUser.email)\n\t\t\t\t.get()\n\t\t\t\t.then((queryDocumentSnapshot) => {\n\t\t\t\t\tqueryDocumentSnapshot.forEach((doc) => {\n\t\t\t\t\t\tsetUsers(doc.get('friends'));\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst data = await db.collection(\"users\").get()\n\t\t\t\tsetUsers(data.docs.map(doc => doc.data()))\n\t\t\t}\n\t\t}\n\t\tfetchUsers()\n\t}, [listType])\n\n    \n\n    let button;\n    let message = ''\n    if (listType == 'Friends') {\n        message = 'View Profile'\n        button = <Button >View Profile</Button>;\n    } \n    else {\n        message = 'Add Friend'\n        button = <Button onClick={addFriend2}>Add Friend</Button>;\n    }\n\n    return (\n\t  \t<>\n\t  \t\t<h2>Users</h2>\n\t  \t\t<div>\n\t  \t\t\t<Button onClick={() => setListType('All')}>All Users</Button>\n                <Button onClick={() => setListType('Friends')}>My Friends</Button>\n\t  \t\t</div>\n\t\t\t<div> \n\t  \t\t\t<strong>{listType}: </strong> \n\t  \t\t\t<ul>\n\t  \t\t\t\t{users.map(user => {\n                        //if(!active){\n                            //message = 'Friend Request Sent'\n                        //}\n\t  \t\t\t\t\treturn <li>{user.email} button = <Button onClick={addFriend()}>{message}</Button> </li>\n                      })}\n\t  \t\t\t</ul>\n\t\t\t</div>\n\n\t  \t</>\n  \t);\n}\n\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}