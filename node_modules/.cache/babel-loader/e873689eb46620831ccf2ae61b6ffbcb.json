{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aspbo\\\\OneDrive\\\\Desktop\\\\CS35L project\\\\final_proj\\\\CS35L-BruinCalendar\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\n// import { app } from '../firebase.js';\nimport React, { useState, useEffect } from \"react\";\nimport './Search.css';\nimport SearchField from \"react-search-field\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'; // import AddComment from './AddComment'\n\nimport EventDetailWindow from './EventDetailWindow';\nimport { Modal } from './Modal';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst choices = [{\n  key: \"choice1\",\n  description: \"Event Search\"\n}, {\n  key: \"choice2\",\n  description: \"Friend Search\"\n}];\n\nconst Search = () => {\n  _s();\n\n  const [input, setInput] = React.useState(\"\"); // const [selectedChoices, setSelectedChoices] = useState(choices);\n\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(undefined);\n  const [isWindowOpen, setIsWindowOpen] = useState(false);\n  const [dateFormatted, setDateFormatted] = useState('');\n\n  const onEventSelected = event => {\n    setSelectedEvent(event);\n    setIsWindowOpen(true);\n    setDateFormatted(event.date);\n  };\n\n  const onCloseDetailWindow = () => {\n    setSelectedEvent(undefined);\n    setIsWindowOpen(false);\n  };\n\n  useEffect(() => {\n    const searchVars = input.split(' ');\n\n    const fetchEvents = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"events\").where('searchValues', 'array-contains-any', searchVars).get(); //console.log('woo')\n      //console.log(data.docs)\n\n      setEvents(data.docs.map(doc => doc.data()));\n    };\n\n    fetchEvents();\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(SearchField, {\n        placeholder: \"Search for events or friends...\",\n        onEnter: (event, value) => setInput(event) //event => setInput(event.target.value)\n        ,\n        searchText: \"\",\n        classNames: \"test-class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"searchlist\",\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.eventName, \" : \", event.description, /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => onEventSelected(event),\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isWindowOpen,\n        onClose: onCloseDetailWindow,\n        children: /*#__PURE__*/_jsxDEV(EventDetailWindow, {\n          item: selectedEvent,\n          date: dateFormatted,\n          close: onCloseDetailWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"B7BaH66vjxhzFSZzw0Kpvuu6ggs=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/aspbo/OneDrive/Desktop/CS35L project/final_proj/CS35L-BruinCalendar/src/components/Search.js"],"names":["React","useState","useEffect","SearchField","firebase","EventDetailWindow","Modal","Button","choices","key","description","Search","input","setInput","events","setEvents","selectedEvent","setSelectedEvent","undefined","isWindowOpen","setIsWindowOpen","dateFormatted","setDateFormatted","onEventSelected","event","date","onCloseDetailWindow","searchVars","split","fetchEvents","db","firestore","data","collection","where","get","docs","map","doc","value","eventName"],"mappings":"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","sourcesContent":["// import { app } from '../firebase.js';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './Search.css'\r\nimport SearchField from \"react-search-field\";\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n// import AddComment from './AddComment'\r\nimport EventDetailWindow from './EventDetailWindow';\r\nimport { Modal } from  './Modal';\r\nimport {Button} from 'react-bootstrap';\r\n \r\n\r\n const choices = [\r\n   { key: \"choice1\", description: \"Event Search\" },\r\n   { key: \"choice2\", description: \"Friend Search\" },\r\n ];\r\n\r\n const Search = () => {\r\n    const [input, setInput] = React.useState(\"\");\r\n    // const [selectedChoices, setSelectedChoices] = useState(choices);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const [ selectedEvent, setSelectedEvent ] = useState(undefined);\r\n    const [ isWindowOpen, setIsWindowOpen ] = useState(false);\r\n    const [ dateFormatted, setDateFormatted ] = useState('');\r\n\r\n    const onEventSelected = event => {\r\n      setSelectedEvent(event);\r\n      setIsWindowOpen(true);\r\n      setDateFormatted(event.date);\r\n    }\r\n  \r\n\r\n    const onCloseDetailWindow = () => {\r\n      setSelectedEvent(undefined);\r\n      setIsWindowOpen(false);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const searchVars = input.split(' ')\r\n        const fetchEvents = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"events\").where('searchValues', 'array-contains-any',\r\n        searchVars).get()\r\n        //console.log('woo')\r\n        //console.log(data.docs)\r\n        setEvents(data.docs.map(doc => doc.data()))\r\n        } \r\n\r\n    fetchEvents()\r\n    }, [input])\r\n\r\n   return (\r\n    <>\r\n     <div className=\"searchbar\"> \r\n     <SearchField\r\n        placeholder=\"Search for events or friends...\"\r\n        onEnter= {(event, value) => setInput(event)}\r\n        //event => setInput(event.target.value)\r\n        searchText=\"\"\r\n        classNames=\"test-class\"\r\n        />\r\n         <div> \r\n            <ul className=\"searchlist\">\r\n              {events.map(event => (\r\n                <li>{event.eventName} : {event.description}\r\n                  <Button onClick={() => onEventSelected(event)}>Details</Button>\r\n                </li>\r\n\t  \t\t    ))}\r\n\t  \t\t</ul>\r\n        </div>\r\n        <Modal\r\n        isOpen={isWindowOpen}\r\n        onClose={onCloseDetailWindow}>\r\n        <EventDetailWindow \r\n          item={selectedEvent}\r\n          date={dateFormatted}\r\n          close={onCloseDetailWindow} />\r\n      </Modal>\r\n     </div>\r\n     </>\r\n   );\r\n }\r\n\r\n export default Search;"]},"metadata":{},"sourceType":"module"}